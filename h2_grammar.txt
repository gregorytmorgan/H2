Expression Grammar:
	
    functions : functions function
              | function

    function : NAME ( parms ) = expr ;
    
    expr : expr + expr
         | expr - expr
         | expr * expr
         | expr / expr
         | expr < expr
         | expr <= expr
         | expr > expr
         | expr >= expr
         | expr == expr
         | expr != expr
         | ( expr )
         | NAME (exprs)
         | if expr then expr else expr
         | NUMBER


#### Example

statements	: statements statement
			| statement
				
statement	: ID ASS expr
			| PRINT LPAREN expr RPAREN
				
				
expr		: expr OP expr
			| LPAREN expr RPAREN
			| STRING			
         	| BOOL			
			| NUM
			| ID

OP			: ADD
			| SUB
			| MUL
			| DIV
			| EQ
			| GT
			| LT									
			| GE
			| LE		


#### 

statements	: statements statement
			| statement
	        | comment
			| error			

statement	: ID ASS expr
			| PRINT LPAREN expr RPAREN
			| ID ( parms ) COLON block
			
			
block		: BLOCK_START statements BLOCK_END

comment		| singleLineComment

			
			
			
			

				
